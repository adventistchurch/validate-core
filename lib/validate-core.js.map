{"version":3,"file":"validate-core.js","sources":["../src/regexp.js","../src/utils.js","../src/validators/datetime.js","../src/validators/date.js","../src/validators/email.js","../src/validators/equality.js","../src/validators/exclusion.js","../src/validators/format.js","../src/validators/inclusion.js","../src/validators/length.js","../src/validators/numericality.js","../src/validators/presence.js","../src/validators/type.js","../src/validators/url.js","../src/validators/index.js","../src/validate.js"],"sourcesContent":["export default {\n  EMPTY_STRING: /^\\s*$/,\n\n  EMAIL: /^(?:[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*|\"(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21\\x23-\\x5b\\x5d-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])*\")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?|\\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x21-\\x5a\\x53-\\x7f]|\\\\[\\x01-\\x09\\x0b\\x0c\\x0e-\\x7f])+)\\])$/i,\n\n  FORMAT_REGEXP: /(%?)%\\{([^}]+)\\}/g,\n\n  PHONE_US: /^\\D?(\\d{3})\\D?\\D?(\\d{3})\\D?(\\d{4})$/,\n\n  URL: ({ allowLocal, schemes }) => {\n    let regexp =\n      '^' +\n      // protocol identifier\n      '(?:(?:' +\n      schemes.join('|') +\n      ')://)' +\n      // user:pass authentication\n      '(?:\\\\S+(?::\\\\S*)?@)?' +\n      '(?:'\n\n    let tld = '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))'\n\n    if (allowLocal) {\n      tld += '?'\n    } else {\n      regexp +=\n        // IP address exclusion\n        // private & local networks\n        '(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})' +\n        '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n        '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})'\n    }\n\n    regexp +=\n      // IP address dotted notation octets\n      // excludes loopback network 0.0.0.0\n      // excludes reserved space >= 224.0.0.0\n      // excludes network & broacast addresses\n      // (first & last IP address of each class)\n      '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n      '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n      '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n      '|' +\n      // host name\n      '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n      // domain name\n      '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n      tld +\n      ')' +\n      // port number\n      '(?::\\\\d{2,5})?' +\n      // resource path\n      '(?:[/?#]\\\\S*)?' +\n      '$'\n\n    return new RegExp(regexp, 'i')\n  },\n}\n","import REGEXP from './regexp'\n\n// If the given argument is a call: function the and: function return the value otherwise just return the value. Additional arguments will be passed as arguments to the function.\n// Example:\n// ```\n// result('foo') // 'foo'\n// result(Math.max, 1, 2) // 2\n// ```\nexport const result = (value, ...args) =>\n  isFunction(value) ? value.apply(null, args) : value\n\n// Checks if the value is a number. This function does not consider NaN a number like many other `isNumber` functions do.\nexport const isNumber = value => typeof value === 'number' && !isNaN(value)\n\n// Returns false if the object is not a function\nexport const isFunction = value => typeof value === 'function'\n\n// A simple check to verify that the value is an integer. Uses `isNumber` and a simple modulo check.\nexport const isInteger = value => isNumber(value) && value % 1 === 0\n\n// A simple check to verify that the value is a float. Uses `isNumber` and 'isInteger' functions\nexport const isFloat = value => isNumber(value) && !isInteger(value)\n\n// Checks if the value is a boolean\nexport const isBoolean = value => typeof value === 'boolean'\n\n// Uses the `Object` function to check if the given argument is an object.\nexport const isObject = obj => obj === Object(obj)\n\n// Simply checks if the object is an instance of a date\nexport const isDate = obj => obj instanceof Date\n\n// Returns false if the object is `null` of `undefined`\nexport const isDefined = obj => obj !== null && obj !== undefined\n\n// Check if value is empty\nexport const isEmpty = value => {\n  // Null and undefined are empty\n  if (!isDefined(value)) return true\n\n  // functions are non empty\n  if (isFunction(value)) return false\n\n  // Whitespace only strings are empty\n  if (isString(value)) return REGEXP.EMPTY_STRING.test(value)\n\n  // For arrays we use the length property\n  if (isArray(value)) return value.length === 0\n\n  // Dates have no attributes but aren't empty\n  if (isDate(value)) return false\n\n  // If we find at least one property we consider it non empty\n  if (isObject(value)) {\n    for (const attr in value) {\n      return !attr\n    }\n    return true\n  }\n\n  return false\n}\n\n// Checks if value is a string\nexport const isString = value => typeof value === 'string'\n\n// Check if calue is an array\nexport const isArray = value => ({}.toString.call(value) === '[object Array]')\n\n// Checks if the object is a hash, which is equivalent to an object that is neither an array, a function nor a date.\nexport const isHash = value =>\n  isObject(value) && !isArray(value) && !isFunction(value) && !isDate(value)\n\n// checks if an object or an array contains a value\nexport const contains = (obj, value) => {\n  if (!isDefined(obj)) return false\n\n  if (isArray(obj)) return obj.indexOf(value) !== -1\n\n  return value in obj\n}\n\n// Removes duplicates in an array\nexport const unique = array => {\n  if (!isArray(array)) return array\n\n  return array.filter((el, index, array) => array.indexOf(el) === index)\n}\n\n// Capitalizes a string\nexport const capitalize = str => {\n  if (!isString(str)) return str\n\n  return str[0].toUpperCase() + str.slice(1)\n}\n\n// Formats the specified strings with the given values like so:\n// ```\n// format(\"Foo: %{foo}\", {foo: \"bar\"}) // \"Foo bar\"\n// ```\n// If you want to write %{...} without having it replaced simply prefix it with % like this `Foo: %%{foo}` and it will be returned as `\"Foo: %{foo}\"`\nexport const formatMessage = (str, vals) => {\n  if (!isString(str)) return str\n  return str.replace(REGEXP.FORMAT_REGEXP, (m0, m1, m2) => {\n    return m1 === '%' ? `%{${m2}}` : String(vals[m2])\n  })\n}\n\n// \"Prettifies\" the given string. Prettifying means replacing [.\\_-] with spaces as well as splitting camel case words.\nexport const prettify = str => {\n  // If there are more than 2 decimals round it to two\n  if (isNumber(str))\n    return (str * 100) % 1 === 0\n      ? `${str}`\n      : parseFloat(Math.round(str * 100) / 100).toFixed(2)\n\n  if (isArray(str)) return str.map(s => prettify(s)).join(', ')\n\n  if (isObject(str)) return str.toString()\n\n  return (\n    // Ensure the string is actually a string\n    `${str}`\n      // Splits keys separated by periods\n      .replace(/([^\\s])\\.([^\\s])/g, '$1 $2')\n      // Removes backslashes\n      .replace(/\\\\+/g, '')\n      // Replaces _ and - with space\n      .replace(/[_-]/g, ' ')\n      // Splits camel cased words\n      .replace(/([a-z])([A-Z])/g, (m0, m1, m2) => `${m1} ${m2.toLowerCase()}`)\n      .toLowerCase()\n  )\n}\n","import { formatMessage, isDefined, unique } from '../utils'\n\nexport const defaults = {\n  earlierThan: null,\n  laterThan: null,\n  dateOnly: false,\n  message: null,\n  notValid: 'must be a valid date (${value})',\n  dateOnlyMessage: 'must be a date (not a datetime)',\n  tooEarly: 'must be no earlier than %{date}',\n  tooLate: 'must be no later than %{date}',\n  formatMessage\n}\n\nexport default (value, options) => {\n  const {\n    earlierThan,\n    laterThan,\n    dateOnly,\n    dateOnlyMessage,\n    message,\n    notValid,\n    tooEarly,\n    tooLate,\n    formatMessage\n  } = {\n    ...defaults,\n    ...options\n  }\n\n  const istNotDefined = !isDefined(value)\n\n  // Empty values are fine\n  if (istNotDefined) return\n\n  const errors = []\n\n  // 86400000 is the number of milliseconds in a day, this is used to remove the time from the date\n  if (istNotDefined || isNaN(value) || (dateOnly && value % 86400000 !== 0))\n    return formatMessage(message || (dateOnly ? dateOnlyMessage : notValid), {\n      date: value\n    })\n\n  if (isDefined(earlierThan) && !isNaN(earlierThan) && value < earlierThan) {\n    errors.push(formatMessage(message || tooEarly, { date: earlierThan }))\n  }\n\n  if (isDefined(laterThan) && !isNaN(laterThan) && value > laterThan) {\n    errors.push(formatMessage(message || tooLate, { date: laterThan }))\n  }\n\n  if (errors.length) return unique(errors)\n}\n","import datetime from './datetime'\n\nexport default (value, options) =>\n  datetime(value, { ...options, dateOnly: true })\n","import { isDefined, isString } from '../utils'\n\nimport REGEXP from '../regexp'\n\nexport const defaults = {\n  message: 'is not a valid email',\n  pattern: REGEXP.EMAIL\n}\n\nexport default (value, options) => {\n  const { message, pattern } = { ...defaults, ...options }\n  const isNotDefined = !isDefined(value)\n\n  if (isNotDefined) return\n\n  if (isNotDefined || !isString(value) || !pattern.exec(value)) {\n    return message\n  }\n}\n","import { formatMessage, isEmpty, isString, prettify } from '../utils'\n\nexport const defaults = {\n  allowEmpty: false,\n  attribute: null,\n  comparator: (a, b) => a === b,\n  message: 'is not equal to %{attribute}',\n  formatMessage\n}\n\nexport default (value, options) => {\n  if (isString(options)) {\n    options = { attribute: options }\n  }\n\n  const { allowEmpty, attribute, comparator, message, formatMessage } = {\n    ...defaults,\n    ...options\n  }\n\n  if (isEmpty(attribute)) return\n\n  if (allowEmpty && isEmpty(value)) return\n\n  if (!comparator(value, attribute)) {\n    return formatMessage(message, {\n      attribute: prettify(attribute)\n    })\n  }\n}\n","import { contains, formatMessage, isArray, isDefined, isString } from '../utils'\n\nexport const defaults = {\n  message: '%{value} is restricted',\n  within: [],\n  formatMessage\n}\n\nexport default (value, options) => {\n  if (isArray(options)) {\n    options = { within: options }\n  }\n\n  const { within, message, formatMessage } = {\n    ...defaults,\n    ...options\n  }\n\n  // empty values are fine\n  if (!isDefined(value)) return\n\n  if (!contains(within, value)) return\n\n  if (isString(within[value])) {\n    value = within[value]\n  }\n\n  return formatMessage(message, { value })\n}\n","import { isDefined, isString } from '../utils'\n\nexport const defaults = {\n  message: 'format is invalid',\n  flags: null,\n  pattern: null\n}\n\nexport default (value, options) => {\n  if (!isDefined(options)) throw new Error('Missing format options!')\n\n  if (isString(options) || options instanceof RegExp) {\n    options = { pattern: options }\n  }\n\n  // Merge defaults and options\n  const { message, flags, pattern } = {\n    ...defaults,\n    ...options\n  }\n\n  // empty values are allowed\n  if (!isDefined(value)) return\n\n  if (!isString(value)) return message\n\n  const pttrn = isString(pattern) ? new RegExp(pattern, flags) : pattern\n\n  if (!pttrn.test(value)) {\n    return message\n  }\n}\n","import { contains, formatMessage, isArray, isDefined } from '../utils'\n\nexport const defaults = {\n  message: '\"%{value}\" is not included in the list',\n  within: [],\n  formatMessage\n}\n\nexport default (value, options) => {\n  if (isArray(options)) {\n    options = { within: options }\n  }\n\n  const { message, within, formatMessage } = {\n    ...defaults,\n    ...options\n  }\n\n  // When empty values are fine\n  if (!isDefined(value)) return\n\n  // When is contained\n  if (contains(within, value)) return\n\n  return formatMessage(message, { value })\n}\n","import { formatMessage, isDefined, isNumber } from '../utils'\n\nexport const defaults = {\n  is: null,\n  maximum: null,\n  minimum: null,\n  notValid: 'has an incorrect length',\n  wrongLength: 'is the wrong length (should be %{is} characters)',\n  tooShort: 'is too short (minimum is %{minimum} characters)',\n  tooLong: 'is too long (maximum is %{maximum} characters)',\n  tokenizer: value => value,\n  formatMessage\n}\n\nexport default (value, options) => {\n  const {\n    is,\n    maximum,\n    message,\n    minimum,\n    notValid,\n    tokenizer,\n    tooLong,\n    tooShort,\n    wrongLength,\n    formatMessage\n  } = { ...defaults, ...options }\n\n  // Empty values are allowed\n  if (!isDefined(value)) return\n\n  const errors = []\n\n  const length = tokenizer(value).length\n\n  if (!isNumber(length)) return notValid\n\n  // Exact (is) check\n  if (isNumber(is) && length !== is) {\n    errors.push(formatMessage(wrongLength, { is }))\n  }\n\n  // Minimum check\n  if (isNumber(minimum) && length < minimum) {\n    errors.push(formatMessage(tooShort, { minimum }))\n  }\n\n  // Maximum check\n  if (isNumber(maximum) && length > maximum) {\n    errors.push(formatMessage(tooLong, { maximum }))\n  }\n\n  if (errors.length > 0) return message || errors\n}\n","import {\n  capitalize,\n  isDefined,\n  isEmpty,\n  formatMessage,\n  isInteger,\n  isNumber,\n  isString,\n  prettify\n} from '../utils'\n\nexport const defaults = {\n  strict: false,\n  onlyInteger: false,\n  odd: false,\n  even: false,\n  message: null,\n  noStrings: false,\n  notValid: 'must be a valid number',\n  notNumber: 'is not a number',\n  notInteger: 'must be an integer',\n  notOdd: 'must be an odd number',\n  notEven: 'must be an even number',\n  mustBe: 'must be %{type} %{count}',\n  notGreaterThan: 'must be greater than %{count}',\n  notGreaterThanOrEqualTo: 'must be greater than or equal to %{count}',\n  notEqualTo: 'must be equal to %{count}',\n  notLessThan: 'must be less than %{count}',\n  notLessThanOrEqualTo: 'must be less than or equal to %{count}',\n  notDivisibleBy: 'must be divisible by %{count}',\n  formatMessage\n}\n\nconst checks = {\n  greaterThan: (v, c) => v > c,\n  greaterThanOrEqualTo: (v, c) => v >= c,\n  equalTo: (v, c) => v === c,\n  lessThan: (v, c) => v < c,\n  lessThanOrEqualTo: (v, c) => v <= c,\n  divisibleBy: (v, c) => v % c === 0\n}\n\nexport default (value, options) => {\n  const errors = []\n\n  const {\n    strict,\n    onlyInteger,\n    odd,\n    even,\n    formatMessage,\n    message,\n    mustBe,\n    noStrings,\n    notEven,\n    notOdd,\n    notInteger,\n    notNumber,\n    notValid\n  } = { ...defaults, ...options }\n\n  // If empty values are fine\n  if (!isDefined(value)) return\n\n  // Strict will check that it is a valid looking number\n  if (isString(value) && strict) {\n    const pattern = `^-?(0|[1-9]\\\\d*)${onlyInteger ? '' : '(\\\\.\\\\d+)?'}$`\n\n    if (!new RegExp(pattern).test(value)) {\n      return message || notNumber\n    }\n  }\n\n  // Coerce the value to a number unless we're being strict.\n  if (noStrings !== true && isString(value) && !isEmpty(value)) {\n    value = +value\n  }\n\n  // If it's not a number we shouldn't continue since it will compare it.\n  if (!isNumber(value)) return message || notValid\n\n  if (!options) return\n\n  // Same logic as above, sort of. Don't bother with comparisons if this\n  // doesn't pass.\n  if (onlyInteger && !isInteger(value)) return message || notInteger\n\n  for (const checkName of Object.keys(checks)) {\n    const count = options[checkName]\n    if (isNumber(count) && !checks[checkName](value, count)) {\n      // This picks the default message if specified\n      // For example the greaterThan check uses the message from\n      // this.notGreaterThan so we capitalize the name and prepend \"not\"\n      const key = 'not' + capitalize(checkName)\n      const msg = options[key] || mustBe\n\n      errors.push(\n        formatMessage(msg, {\n          count: count,\n          type: prettify(checkName)\n        })\n      )\n    }\n  }\n\n  if (odd && value % 2 !== 1) {\n    errors.push(notOdd)\n  }\n\n  if (even && value % 2 !== 0) {\n    errors.push(notEven)\n  }\n\n  if (errors.length) return message || errors\n}\n","import { isDefined, isEmpty } from '../utils'\n\nexport const defaults = {\n  allowEmpty: false,\n  message: \"can't be blank\"\n}\n\n// Presence validates that the value isn't empty\nexport default (value, options) => {\n  const { allowEmpty, message } = { ...defaults, ...options }\n\n  if (allowEmpty !== false ? !isDefined(value) : isEmpty(value)) {\n    return message\n  }\n}\n","import {\n  formatMessage,\n  isArray,\n  isBoolean,\n  isDate,\n  isDefined,\n  isFloat,\n  isFunction,\n  isHash,\n  isInteger,\n  isNumber,\n  isString\n} from '../utils'\n\nexport const defaults = {\n  message: 'must be of type %{type}',\n  formatMessage,\n  type: null\n}\n\nexport default (value, options) => {\n  if (isString(options)) {\n    options = { type: options }\n  }\n\n  const { message, type } = { ...defaults, ...options }\n\n  if (!isDefined(type)) throw new Error('No type was specified')\n\n  if (!isDefined(value)) return\n\n  const types = {\n    array: isArray,\n    boolean: isBoolean,\n    date: isDate,\n    float: isFloat,\n    function: isFunction,\n    integer: isInteger,\n    number: isNumber,\n    object: value => isHash(value),\n    string: isString\n  }\n\n  const check = isFunction(type) ? type : types[type]\n\n  if (!isFunction(check)) throw new Error(`${type} must be a function.`)\n\n  if (!check(value, options)) {\n    const msg = isFunction(message)\n      ? message(value, options)\n      : isFunction(type)\n        ? 'must be of the correct type'\n        : message\n\n    return formatMessage(msg, {\n      type\n    })\n  }\n}\n","import { isDefined, isString } from '../utils'\nimport REGEXP from '../regexp'\n\nexport const defaults = {\n  allowLocal: false,\n  message: 'is not a valid url',\n  schemes: ['http', 'https']\n}\n\n// A URL validator that is used to validate URLs with the ability to\n// restrict schemes and some domains.\nexport default (value, options) => {\n  const { allowLocal, message, schemes } = {\n    ...defaults,\n    ...options\n  }\n\n  if (!isDefined(value)) return\n\n  if (!isString(value)) return message\n\n  if (!REGEXP.URL({ allowLocal, schemes }).exec(value)) {\n    return message\n  }\n}\n","import date from './date'\nimport datetime from './datetime'\nimport email from './email'\nimport equality from './equality'\nimport exclusion from './exclusion'\nimport format from './format'\nimport inclusion from './inclusion'\nimport length from './length'\nimport numericality from './numericality'\nimport presence from './presence'\nimport type from './type'\nimport url from './url'\n\nexport default {\n  date,\n  datetime,\n  email,\n  equality,\n  exclusion,\n  format,\n  inclusion,\n  length,\n  numericality,\n  presence,\n  type,\n  url\n}\n","import validators from './validators/index'\nimport { isArray, isDefined, isFunction } from './utils'\n\n// Runs the validators specified by the constraints object:\n// - If validation fails, it will return an array with the errors.\n// - Otherwise it will return undefined\nexport function validate(value, constraints) {\n  const results = []\n\n  if (!isDefined(constraints)) return\n\n  // Loops through each constraints, finds the correct validator and run it.\n  for (const constraint in constraints) {\n    const validator = validators[constraint]\n\n    if (!isFunction(validator))\n      throw new Error(`Unknow validator \"${validator}\"`)\n\n    const result = validator(value, constraints[constraint])\n\n    if (result) {\n      results.push(isArray(result) ? [...result] : result)\n    }\n  }\n\n  if (results.length) return results\n}\n"],"names":["EMPTY_STRING","EMAIL","FORMAT_REGEXP","PHONE_US","URL","allowLocal","schemes","regexp","join","tld","RegExp","isNumber","value","isNaN","isFunction","isInteger","isFloat","isBoolean","isObject","obj","Object","isDate","Date","isDefined","undefined","isEmpty","isString","REGEXP","test","isArray","length","attr","toString","call","isHash","contains","indexOf","unique","array","filter","el","index","capitalize","str","toUpperCase","slice","formatMessage","vals","replace","m0","m1","m2","String","prettify","parseFloat","Math","round","toFixed","map","s","toLowerCase","defaults","earlierThan","laterThan","dateOnly","message","notValid","dateOnlyMessage","tooEarly","tooLate","options","istNotDefined","errors","date","push","datetime","pattern","isNotDefined","exec","allowEmpty","attribute","comparator","a","b","within","flags","Error","pttrn","is","maximum","minimum","wrongLength","tooShort","tooLong","tokenizer","strict","onlyInteger","odd","even","noStrings","notNumber","notInteger","notOdd","notEven","mustBe","notGreaterThan","notGreaterThanOrEqualTo","notEqualTo","notLessThan","notLessThanOrEqualTo","notDivisibleBy","checks","greaterThan","v","c","greaterThanOrEqualTo","equalTo","lessThan","lessThanOrEqualTo","divisibleBy","keys","checkName","count","key","msg","type","types","integer","number","object","string","check","email","equality","exclusion","format","inclusion","numericality","presence","url","validate","constraints","results","constraint","validator","validators","result"],"mappings":"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"}